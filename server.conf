dev tun
proto udp # Hier könnte man auch tcp eintragen. Im Zweifel nicht ändern
port 1194
ca /etc/openvpn/easy-rsa/keys/ca.crt
cert /etc/openvpn/easy-rsa/keys/Server.crt # HIER DEN SERVER-NAMEN von "./build-key SERVER" eintragen
key /etc/openvpn/easy-rsa/keys/Server.key # HIER DEN SERVER-NAMEN von "./build-key SERVER" eintragen
dh /etc/openvpn/easy-rsa/keys/dh2048.pem
server 10.8.0.0 255.255.255.0
# Server und Client IP Adressen
ifconfig 10.8.0.1 10.8.0.2
# Route zum Server für den Client
push "route 10.8.0.1 255.255.255.255"
# Route zum Subnet des Servers für den Client
push "route 10.8.0.0 255.255.255.0"
# Das eigene Subnet
push "route 192.168.178.56 255.255.255.0" # HIER DIE IP ADRESSE DES RASPBERRY PI EINTRAGEN

# Option 1: Der komplette Traffic geht über das VPN, als auch alles was aus dem Internet geladen wird
#           oder DNS Anfragen. Macht die Nutzung des Internets langsaem, dafür sieht es für die Webseiten so aus
#           als kämen die Anfragen vom VPN Server. Das kann wichtig sein, wenn man im Ausland ist.
# Den Router, an dem der Server hängt, als DNS Server benutzen
# Falls der Router kein DNS bereitstellt, könnte man auch Google DNS 8.8.8.8 benutzen
# push "dhcp-option DNS 192.168.0.1" # HIER DEN IP ADRESSE DES ROUTERS EINTRAGEN
# push "redirect-gateway def1"

# Option 2: Wir nutzen einen Split-Tunnel, bei dem nur Anfragen an das eigene Netzwerk über das VPN laufen.
            Das macht Sinn, wenn wir auf Geräte im heimischen Netzwerk zugreifen wollen (NAS, andere Computer)
push "route 192.168.0.0 255.255.255.0" # HIER DAS EIGENE SUBNET EINTRAGEN (ROUTER IP MIT EINER 0 AM ENDE)

client-to-client
duplicate-cn
keepalive 10 120
tls-auth /etc/openvpn/easy-rsa/keys/ta.key 0
cipher AES-128-CBC
# Übertragene Daten komprimieren? Bei mir wird es dadurch eher langsamer, weil ich eine schnelle Verbindung habe.
# Kann man im Zweifel ausprobieren.
# comp-lzo
user nobody
group nogroup
persist-key
persist-tun
status /var/log/openvpn-status.log 20
log /var/log/openvpn.log
verb 1
